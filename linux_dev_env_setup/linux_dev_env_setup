#!/usr/bin/env bash

GIT_EMAIL="88102362+marvinobig@users.noreply.github.com"
GIT_USERNAME="marvinobig"
GIT_BRANCH_NAME="main"
PARENT_DIR="Repos"
DRUPAL_DIR="drupal"
JS_DIR="js"
NET_DIR="csharp"
PG_INFO="*:*:*:*:password"

function separator() {
    local MSG=${1:-" "}
    echo " "
    echo "$MSG"
}

separator "Beginning environment setup"
sudo apt update && sudo apt upgrade


# Installing Git, NVM, Node, NPM & PostgreSQL 
separator "Installing Git, NVM, Node, NPM & PostgreSQL:"
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install git
sudo apt install postgresql postgresql-contrib 
sudo systemctl start postgresql.service && touch ~/.pgpass && echo "$PG_INFO" >> ~/.pgpass
touch ~/.bash_profile
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
source ~/.nvm/nvm.sh && nvm install node && nvm use node 
sudo -u postgres createuser --superuser $USER && sudo -u postgres createdb $USER


# Print out versions if above steps successful
separator "Package versions:"
git --version && nvm --version && node --version && npm --version && psql --version


# Configure GIT
separator "Configuring GIT:"
git config --global credential.helper store
git config --global user.name "$GIT_USERNAME"
git config --global user.email "$GIT_EMAIL"
git config --global init.defaultBranch "$GIT_BRANCH_NAME" 
git config --global core.editor "$GIT_EDITOR"
separator "GIT is configured:"
git config --global --list


#Setup Github SSH keygen
separator "Setup Github SSH keygen:"
ssh-keygen -t ed25519 -C "$GIT_EMAIL"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519


# Install CSharp
separator "Installing CSharp:"
sudo apt-get update && sudo apt install dotnet-sdk-7.0
sudo apt-get update && sudo apt install dotnet-sdk-6.0
separator "CSharp version:"
dotnet --info


# Install PHP
separator "Installing PHP:"
sudo apt install software-properties-common && sudo add-apt-repository ppa:ondrej/php -y
sudo apt update && sudo apt upgrade -y
sudo apt install php
sudo apt install php8.2-xml
sudo apt install php-curl
sudo apt install php-sqlite3
sudo apt install php-gd
separator "PHP version:"
php --version


# Install composer
separator "Installing composer:"
sudo apt update
sudo apt install php-cli unzip
curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
HASH="$(curl -sS https://composer.github.io/installer.sig)"
php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.bashrc 
separator "Composer version:"
composer


#Install Docker
separator "Installing Docker:"
sudo apt update
sudo apt install ca-certificates curl gnupg lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world
sudo groupadd docker
sudo usermod -aG docker $USER
sudo systemctl enable docker.service
sudo systemctl enable containerd.service
sudo apt install docker-compose-plugin
separator "Docker version:"
docker --version


# Install DDEV
separator "Installing DDEV:"
curl -fsSL https://pkg.ddev.com/apt/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null
echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://pkg.ddev.com/apt/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list >/dev/null
sudo apt update && sudo apt install -y ddev
separator "DDEV version:"
ddev --version

# Create Workspace
separator "Creating Workspace:"
mkdir "$PARENT_DIR" && mkdir "$PARENT_DIR/$DRUPAL_DIR" && mkdir "$PARENT_DIR/$JS_DIR" && mkdir "$PARENT_DIR/$NET_DIR"

separator "Environemnt setup complete"
